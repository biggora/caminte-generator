/**
*  {name} Model Test
*  Created by create-test script @2016-01-02T17:30:54.830Z
**/

if (!process.env.NODE_ENV) {
    process.env.NODE_ENV = 'test';
}

var chai = require('chai');
var expect = chai.expect;
var caminte = require('caminte');
var config = require('../../config');
var dbConf = config.db[process.env.NODE_ENV];
var {name}Model = require('../../models/{name}');
var Schema = caminte.Schema;
dbConf.host = process.env.DB_HOST || dbConf.host;
var schema = new Schema(dbConf.driver, dbConf);
var {name} = {name}Model(schema);

describe('Model {name}:', function () {
    'use strict';
    var {nameToLowerCase}, id;

    before(function (done) {
        schema.autoupdate(function () {
            done();
        });
    });

    after(function (done) {
        {name}.destroyAll(function (err) {
            done();
        });
    });

    it('#create', function (done) {
        {name}.create(function (err, created) {
            expect(err).to.not.exist;
            expect(created).to.have.property('id');
            expect(created.id).to.not.eql(null);
            id = created.id;
            done();
        });
    });

    it('#exists', function (done) {
        {name}.exists(id, function (err, exists) {
            expect(err).to.not.exist;
            expect(exists).to.be.true;
            done();
        });
    });

    it('#findById', function (done) {
        {name}.findById(id, function (err, found) {
            expect(err).to.not.exist;
            expect(found.id).to.eql(id);
            done();
        });
    });

    it('#findOne', function (done) {
        {name}.findOne({
            where: {
                id: id
            }
        }, function (err, found) {
            expect(err).to.not.exist;
            expect(found.id).to.eql(id);
            done();
        });
    });

    it('#find', function (done) {
        {name}.find({}, function (err, founds) {
            expect(err).to.not.exist;
            expect(founds).to.have.lengthOf(1);
            done();
        });
    });

    it('#all', function (done) {
        {name}.all({}, function (err, founds) {
            expect(err).to.not.exist;
            expect(founds).to.have.lengthOf(1);
            done();
        });
    });

    it('#count', function (done) {
        {name}.count({}, function (err, count) {
            expect(err).to.not.exist;
            expect(count).to.eql(1);
            done();
        });
    });

    it('#destroyById', function (done) {
        {name}.destroyById(id, function (err) {
            expect(err).to.not.exist;
            {name}.findById(id, function (err, found) {
                expect(err).to.not.exist;
                expect(found).to.not.exist;
                done();
            });
        });
    });
});