/**
 *  {name} Route Test
 *  Created by create-test script
 **/
var request = require('supertest');
var chai = require('chai');
var expect = chai.expect;
var id, item, updated, list;
if(!app) {
    var app = require('../../app');
}

describe('Routes for {name}:', function () {

    before(function (done) {
        if(!app) app.listen(3000);
        done();
    });

    it('#index GET /{prefix}/{namePluralized}', function (done) {
        request(app)
            .get('/{prefix}/{namePluralized}')
            .set('Accept', 'application/json')
            .expect('Content-Type', /json/)
            .expect(200)
            .end(function (err, res) {
                if (err) return done(err);
                list = res.body;
                expect(list.items).to.have.lengthOf(0);
                done();
            });
    });

    it('#create POST /{prefix}/{namePluralized}', function (done) {
        request(app)
            .post('/{prefix}/{namePluralized}')
            // .field('name', 'my awesome avatar')
            .set('Accept', 'application/json')
            .expect(201)
            .end(function (err, res) {
                if (err) return done(err);
                expect(res).to.have.property('body');
                item = res.body;
                expect(item).to.have.property('id');
                expect(item.id).to.exist;
                id = item.id;
                done();
            });
    });

    it('#show GET /{prefix}/{namePluralized}/:id', function (done) {
        request(app)
            .get('/{prefix}/{namePluralized}/' + id)
            .set('Accept', 'application/json')
            .expect(200)
            .end(function (err, res) {
                if (err) return done(err);
                expect(res).to.have.property('body');
                item = res.body;
                expect(item).to.have.property('id');
                expect(item.id).to.exist;
                done();
            });
    });

    it('#update PUT /{prefix}/{namePluralized}/:id', function (done) {
        request(app)
            .put('/{prefix}/{namePluralized}/' + id)
            .set('Accept', 'application/json')
            .expect(200)
            .end(function (err, res) {
                if (err) return done(err);
                expect(res).to.have.property('body');
                updated = res.body;
                expect(updated).to.have.property('id');
                expect(updated.id).to.exist;
                done();
            });
    });

    it('#destroy DEL /{prefix}/{namePluralized}/:id', function (done) {
        request(app)
            .delete('/{prefix}/{namePluralized}/' + id)
            .set('Accept', 'application/json')
            .expect(204)
            .end(function (err, res) {
                if (err) return done(err);
                expect(res).to.have.property('body');
                updated = res.body;
                expect(updated).to.have.not.property('id');
                expect(updated.id).to.not.exist;
                done();
            });
    });

});